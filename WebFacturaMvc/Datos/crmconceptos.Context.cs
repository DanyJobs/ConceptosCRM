//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebFacturaMvc.Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Model.Entity;

    public partial class crmconceptoseEntities1 : DbContext
    {
        public crmconceptoseEntities1()
            : base("name=crmconceptoseEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<categoria> categoria { get; set; }
        public virtual DbSet<cliente> cliente { get; set; }
        public virtual DbSet<cotizacion> cotizacion { get; set; }
        public virtual DbSet<detalleCotizacion> detalleCotizacion { get; set; }
        public virtual DbSet<empleado> empleado { get; set; }
        public virtual DbSet<factura> factura { get; set; }
        public virtual DbSet<marca> marca { get; set; }
        public virtual DbSet<modoPago> modoPago { get; set; }
        public virtual DbSet<producto> producto { get; set; }
        public virtual DbSet<tipoEmpleado> tipoEmpleado { get; set; }   

        public virtual int reporte_factura(string idPedido)
        {
            var idPedidoParameter = idPedido != null ?
                new ObjectParameter("idPedido", idPedido) :
                new ObjectParameter("idPedido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("reporte_factura", idPedidoParameter);
        }
    
        public virtual ObjectResult<SP_COTIZACION_HISTORIAL_Result> SP_COTIZACION_HISTORIAL(string idProducto)
        {
            var idProductoParameter = idProducto != null ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_COTIZACION_HISTORIAL_Result>("SP_COTIZACION_HISTORIAL", idProductoParameter);
        }
    
        public virtual int SP_COTIZACION_HISTORIAL_TODO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_COTIZACION_HISTORIAL_TODO");
        }
    
        public virtual ObjectResult<sp_lista_clientes_Result> sp_lista_clientes(Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter pageCount)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_lista_clientes_Result>("sp_lista_clientes", pageIndexParameter, pageSizeParameter, pageCount);
        }
    
        public virtual ObjectResult<sp_producto_categoria_Result> sp_producto_categoria(string idCategoria)
        {
            var idCategoriaParameter = idCategoria != null ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_producto_categoria_Result>("sp_producto_categoria", idCategoriaParameter);
        }
    
        public virtual ObjectResult<SP_PRODUCTO_CONSULTA_Result> SP_PRODUCTO_CONSULTA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PRODUCTO_CONSULTA_Result>("SP_PRODUCTO_CONSULTA");
        }
    
        public virtual int sp_reporte_venta(Nullable<decimal> idVenta)
        {
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("idVenta", idVenta) :
                new ObjectParameter("idVenta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_reporte_venta", idVentaParameter);
        }
    }
}
